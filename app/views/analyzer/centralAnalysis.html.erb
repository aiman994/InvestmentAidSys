<link rel="stylesheet" href="/assets/css/session.scss">
<link rel="stylesheet" href="/assets/css/bootstrap-theme.min.css">
<link rel="stylesheet" href="/assets/css/bootstrap.min.css">
<script src="/assets/javascripts/js/Highstock/highstock.js"></script>
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/data.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>

<head> <div><nav class="navbar navbar-inverse navbar-fixed-top">
        <a class="navbar-brand" href="#">Investment Aid System</a>
        <ul class="nav navbar-nav">
            <li ><a href="/views/welcome/homepage.html">Home</a></li>
            <li><a href="/views/viewer/company.html">Companies</a></li>
            <li><a href="/views/viewer/news.html">News</a></li>
            <li ><a href="/views/welcome/about.html">About</a></li>
            <li><a href="/views/session/login.html">Login</a></li>
          </ul>

        </nav>
    </div>
</head>
<br>
<br>
<h1>Analyzer#centralAnalysis page </h1>

<div id="container" style="height: 400px; min-width: 310px"></div>
<script type="text/javascript">
        var seriesOptions = [],
            seriesCounter = 0,
            stock_tickers = '';
            names = ['data', 'predict'];

        $.getJSON('/views/analyzer/data/ABT.AX', function(data) {
            // set the allowed units for data grouping
            var groupingUnits = [
                [
                  'week',                         // unit name
                  [1]                             // allowed multiples
                ],
                [
                  'month',
                  [1, 2, 3, 4, 6]
                ]
            ];

            var ohlc = [],
                volume = [],
                predicted_prices = [],
                //Get records from each json node (stock, prediction)
                stockList = data.stock,
                predictionList = data.prediction;

            stock_tickers = stockList[0].stock_tickers;
            $.each(stockList, function (index, stock){
              ohlc.push([
                  parseInt(stock.price_date), // the date
                  stock.price_open, // open
                  stock.price_high, // high
                  stock.price_low, // low
                  stock.price_close // close
              ]);
              volume.push([
                  parseInt(stock.price_date), // the date
                  stock.volume // the volume
              ]);
            });

            $.each(predictionList, function(index, prediction){
              predicted_prices.push([
                parseInt(prediction.updated_at)
                prediction.predicted_price
              ]);
            })

            seriesOptions = [
              {
                  type: 'spline',
                  name: 'data',
                  data: ohlc,
                  dataGrouping: {
                              units: groupingUnits
                    }
              },
              {
                  type: 'candlestick',
                  name: 'data',
                  data: ohlc,
                  dataGrouping: {
                      units: groupingUnits
                  }
              },
              {
                  type: 'column',
                  name: 'Volume',
                  data: volume,
                  yAxis: 1,
                  dataGrouping: {
                              units: groupingUnits
                    }
              }
            ];
            createChart();
        });

        function createChart() {
            Highcharts.stockChart('container', {
                chart: {
                    width: 890
                },
                plotOptions: {
                    candlestick: {
                        color: 'red',
                        upColor: 'green'
                    }
                },
                rangeSelector: {
                    selected: 2
                },
                xAxis: {
                    type: 'datetime',
                    dateTimeLabelFormats: { // don't display the dummy year
                        month: '%e. %b',
                        year: '%b'
                    },
                    title: {
                        text: 'Date'
                    }
                },
                title: {
                    text:  stock_tickers + ' Stock Historical Data'
                },
                yAxis: [
                  {
                      labels: {
                          align: 'right',
                          x: -3
                      },
                      title: {
                          text: 'OHLC'
                      },
                      height: '60%',
                      lineWidth: 2
                  },
                  {
                      labels: {
                          align: 'right',
                          x: -3
                      },
                      title: {
                          text: 'Volume'
                      },
                      top: '65%',
                      height: '35%',
                      offset: 0,
                      lineWidth: 2
                  }
                ],
                series: seriesOptions
            });
        }
 </script>

<br>

std out technical analysis <%= @stdout %>
<br>
std out pattern <%= @stdout1%>
<%= @ticker%>
